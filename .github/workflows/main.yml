name: lint and test

# trigger only on PRs to `main` branch
on:
  pull_request:
    branches:
      - master
      - develop

jobs:
  lint-and-test:
    runs-on: ubuntu-20.04
    strategy:
      # By default, GitHub will maximize the number of jobs run in parallel
      # depending on the available runners on GitHub-hosted virtual machines.
      # max-parallel: 8
      fail-fast: false
      matrix:
        python-version:
          - "3.5"
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
        django-version:
          - "2.2"  # LTS
          - "3.0"
          - "3.1"
          - "3.2"  # LTS
          - "4.0"
          - "4.1"
        exclude:
          # Python 3.5 is not compatible with Django 2.2+
          - python-version: "3.5"
            django-version: "3.0"
          - python-version: "3.5"
            django-version: "3.1"
          - python-version: "3.5"
            django-version: "3.2"
          - python-version: "3.5"
            django-version: "4.0"
          - python-version: "3.5"
            django-version: "4.1"
          # Python 3.10 is compatible with Django 3.2+
          - python-version: "3.10"
            django-version: "2.2"
          - python-version: "3.10"
            django-version: "3.0"
          - python-version: "3.10"
            django-version: "3.1"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip version
        run: |
          python -m pip install -U pip

      - name: Upgrade django version
        run: |
          python -m pip install "Django~=${{ matrix.django-version }}.0"

      - name: Python and Django versions
        run: |
          echo "Python ${{ matrix.python-version }} -> Django ${{ matrix.django-version }}"
          python --version
          echo "Django: `django-admin --version`"

      - name: run tests
        run: |
          python -m pip install coverage
          coverage run --source=django_spam setup.py test
          coverage report
          coverage xml -o coverage.xml

      - name: Codecov
        if: success()
        uses: codecov/codecov-action@v2
        with:
          file: coverage.xml
          flags: unittests
